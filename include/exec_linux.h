
// -----------------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------------------------------------

#include <stdio.h>

// -----------------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------------------------------------

size_t exec(const char *command, unsigned char *data, const size_t size) {

    FILE *pipe = popen(command, "r");
    if (!pipe) {
        perror("popen");
        return 0;
    }
    size_t total_bytes = 0;
    size_t bytes_read;
    while ((bytes_read = fread(data + total_bytes, 1, size - total_bytes, pipe)) > 0) {
        total_bytes += bytes_read;
        if (total_bytes >= size) {
            fprintf(stderr, "command (%s) data too large for buffer\n", command);
            total_bytes = 0;
            break;
        }
    }
    const int status = pclose(pipe);
    if (status != 0) {
        fprintf(stderr, "command (%s) exited with status %d\n", command, WEXITSTATUS(status));
        return 0;
    }
    return total_bytes;
}

// -----------------------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------------------------------------
